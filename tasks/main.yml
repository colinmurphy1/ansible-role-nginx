---

- name: Include OS-specific vars
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install nginx
  package:
    name: nginx
    state: "{{ nginx_package_state }}"

- name: Nginx service
  service:
    name: nginx
    state: "{{ nginx_service_state }}"

- name: Get nginx version
  shell: nginx -v 2>&1 | cut -d'/' -f2
  register: nginx_version
  changed_when: False # should never report changes

- name: Generate dhparam for intermediate SSL configuration
  community.crypto.openssl_dhparam:
    path: "{{ nginx_dhparam_path }}"
    size: "{{ nginx_dhparam_size }}"
  when: nginx_ssl_config != "modern"

- name: Create snippets directory
  file:
    path: /etc/nginx/snippets
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Copy configuration files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0644'
    owner: root
    group: root
  loop:
    - { src: "files/proxy_params", dest: "/etc/nginx/" }
    - { src: "files/security.conf", dest: "/etc/nginx/snippets/" }
  notify: test configuration

- name: Generate configuration templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0644'
    owner: root
    group: root
  loop:
    - { src: "nginx.conf.j2", dest: "/etc/nginx/nginx.conf" }
    - { src: "default.conf.j2", dest: "/etc/nginx/conf.d/default.conf" }
    - { src: "vhost.conf.j2", dest: "/etc/nginx/conf.d/vhost.conf" }
    - { src: "proxy.conf.j2", dest: "/etc/nginx/conf.d/proxy.conf" }
    - { src: "ssl.conf.j2", dest: "/etc/nginx/snippets/ssl.conf" }
  notify: test configuration
